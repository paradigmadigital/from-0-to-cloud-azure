image: docker:20.10.7

variables:
  # When you use the dind service, you must instruct Docker to talk with
  # the daemon started inside of the service. The daemon is available
  # with a network connection instead of the default
  # /var/run/docker.sock socket. Docker 19.03 does this automatically
  # by setting the DOCKER_HOST in
  # https://github.com/docker-library/docker/blob/d45051476babc297257df490d22cbd806f1b11e4/19.03/docker-entrypoint.sh#L23-L29
  #
  # The 'docker' hostname is the alias of the service container as described at
  # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services.
  #
  # Specify to Docker where to create the certificates. Docker
  # creates them automatically on boot, and creates
  # `/certs/client` to share between the service and job
  # container, thanks to volume mount from config.toml
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_BUILDKIT: 1

stages:
  - build-push
  - deploy

build-push:
  stage: build-push
  services:
    - docker:20.10.7-dind
  script:
    - docker build -t api-gateway .
    - docker tag api-gateway $ACR_URL/api-gateway:latest
    - docker login $ACR_URL --username $ARM_CLIENT_ID --password $ARM_CLIENT_SECRET
    - docker push $ACR_URL/api-gateway:latest
  tags:
    - rvillar
    - docker

deploy:
  stage: deploy
  image: alpine
  script:
    - apk add --no-cache curl
    - curl -LO $KUBECTL_DOWNLOAD_URL
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - mkdir ~/.kube
    - cp $KUBECONFIG ~/.kube/config
    - kubectl apply -f deployment.yml -n backend
  tags:
    - rvillar
    - docker
